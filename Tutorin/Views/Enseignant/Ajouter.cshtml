@model Tutorin.Models.Enseignant
@using System.Security.Claims;
@using Tutorin.Models
@{
    ViewBag.Title = "Ajouter un enseignant";
    Layout = "_LayoutDuSite";
}

@section css {
    <link href="/css/Form.css" rel="stylesheet" />
}

<h1>Créer un profil</h1>
<div>

    @using (Html.BeginForm("Ajouter", "Enseignant", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <fieldset>
            <legend>Enseignant</legend>

            <div class="boite-form">
                @Html.LabelFor(m => Model.Utilisateur.Nom)<br />
                @Html.TextBoxFor(m => Model.Utilisateur.Nom)<br />
                @Html.ValidationMessageFor(m => Model.Utilisateur.Nom)
            </div>

            <div class="boite-form">
                @Html.LabelFor(m => Model.Utilisateur.Prenom)<br />
                @Html.TextBoxFor(m => Model.Utilisateur.Prenom)<br />
                @Html.ValidationMessageFor(m => Model.Utilisateur.Prenom)
            </div>

            <div class="boite-form">
                @Html.LabelFor(m => Model.Utilisateur.Identifiant) <br />
                @Html.TextBoxFor(m => Model.Utilisateur.Identifiant)<br />
                @Html.ValidationMessageFor(m => Model.Utilisateur.Identifiant)
            </div>

            <div class="boite-form">
                @Html.LabelFor(m => Model.Utilisateur.MotDePasse)<br />
                @Html.TextBoxFor(m => Model.Utilisateur.MotDePasse, new {@type = "password" } )<br />
                @Html.ValidationMessageFor(m => Model.Utilisateur.MotDePasse)
            </div>

            <div class="boite-form">
                @Html.LabelFor(m => Model.Matiere)
                @Html.DropDownListFor(m => Model.Matiere, new SelectList(Enum.GetValues(typeof(TypeMatiere))))
                @Html.ValidationMessageFor(m => Model.Matiere)
            </div>

            <div class="boite-form">
                @Html.LabelFor(m => Model.Niveaux)
                @Html.DropDownListFor(m => Model.Niveaux, new SelectList(Enum.GetValues(typeof(TypeNiveau))))
                @Html.ValidationMessageFor(m => Model.Niveaux)
            </div>
            
                <div class="custom-file-upload">
                        @Html.HiddenFor(model=>model.ImagePath)
                        @Html.LabelFor(model => model.Image) <br />
                        @Html.TextBoxFor(model => model.Image, new { placeholder = "Description", @type = "file" })
                 </div>
               
            @*<div class="custom-file-upload">
                @Html.LabelFor(m => Model.Image) <br />
                @Html.TextBoxFor(m => Model.ImagePath, new { placeholder = "Description",  @type  = "file" })<br />
                @Html.ValidationMessageFor(m => Model.Image)
            </div>*@

            <input class="boutonStyle" type="submit" value="Créer" />
        </fieldset>
    }

</div>

@section Script {
    <script type="text/javascript" src="~/Scripts/jquery-3.3.1.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.validate-vsdoc.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.validate.unobtrusive.js"></script>
}

@{
    bool authentifie = User.Identity.IsAuthenticated;
    string role = "";
    if (authentifie)
    {
        role = User.FindFirst(ClaimTypes.Role).Value;
    }

}

@section Menu {
    <a href="/home/">Accueil</a>

    @if (authentifie)
    {
        <a href="/@role/TableauDeBord/">Tableau de Bord</a>
        <a href="/login/Deconnexion">Déconnexion</a>
    }
    else
    {
        <a href="/login/">Connexion</a>
    }

}

