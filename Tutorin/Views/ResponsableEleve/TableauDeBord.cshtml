@model Tutorin.ViewModels.TableauBordResponsableViewModel
@using Tutorin.Models
@{
    ViewBag.Title = "Tableau de Bord Responsable Eleve";
    Layout = "_LayoutDuSite";
}

@section css {
    <link href="/css/cards.css" rel="stylesheet" />
    <link href="/css/TableauDeBord.css" rel="stylesheet" />
   
}

@section Menu {

    <a href="/Home/">Accueil</a>
    <a href="/Prestation/VoirPrestationsValidees?responsableId=@Model.ResponsableEleve.Id">Prestations</a>
    <a href="/ResponsableEleve/modifier?responsableId=@Model.ResponsableEleve.Id">Mon Compte</a>
    <a href="/login/Deconnexion">Déconnexion</a>
}

<div class="nomUtilisateur">
    <h2>@Model.ResponsableEleve.Utilisateur.Nom.ToUpper() @Model.ResponsableEleve.Utilisateur.Prenom</h2>
    <h3><i class="fa-solid fa-user"></i>&ensp;Responsable</h3>
</div>

<h1>Mes Abonnements :</h1>


<div class="cards">


    @foreach (Abonnement abonnement in Model.ResponsableEleve.Abonnements)
    {
        @if (abonnement.DateFin == DateTime.MinValue)
        {
            <div class="card abonnement">
                <div class="card__icon">
                    <i class="fa-solid fa-file-contract"></i>
                </div>

                <h2 class="card__title">@TypeAbonnementExtensions.NomAbonnement(abonnement.Type)</h2>

                <div>
                    Depuis le : @abonnement.DateDebut.ToString("d")<br>
                    Prix mensuel : @abonnement.PrixTTC €
                </div>

                <p class="card__button">
                    <a class="card__link" href="/Abonnement/FinAbonnement?abonnementid=@abonnement.Id">
                        <i class="fa-sharp fa-solid fa-xmark"></i>
                        Arrêter l'abonnement
                    </a>
                </p>

                <br />

                @if (abonnement.EleveId == null)
                {
                    <p class="card__button">
                        <a class="card__link" href="/Abonnement/ajouterEleve?abonnementid=@abonnement.Id">
                            <i class="fa-sharp fa-solid fa-circle-plus"></i>
                            Ajouter un élève
                        </a>
                    </p>
                }
                else
                {
                    <div>
                        Eleve : @abonnement.Eleve.Utilisateur.Nom @abonnement.Eleve.Utilisateur.Prenom<br>
                        Niveau : @abonnement.Eleve.Niveau
                    </div>
     
                    <p class="card__button">
                        <a class="card__link" href="/Eleve/modifier?eleveId=@abonnement.EleveId">
                            <i class="fa-solid fa-pen"></i>
                            Modifier le profil de l'élève
                        </a>

                    </p>
                    <p class="card__button">
                        <a class="card__link" href="/Abonnement/supprimerEleve?abonnementId=@abonnement.Id">
                            <i class="fa-sharp fa-solid fa-xmark"></i>
                            Supprimer l'élève
                        </a>
                    </p>

                }
            </div>
        }
    }

    <div class="card abonnement">
        <h2 class="card__title">Ajouter un nouvel abonnement</h2>
        <div>
        </div>
        <p class="card__button">
            <a class="card__link" href="/Abonnement/ajouterAbonnement">
                <i class="fa-sharp fa-solid fa-circle-plus"></i>
                Ajouter un abonnement
            </a>
        </p>
    </div>

</div>


<h1>Les Prestations Réservées :</h1>

@foreach (Eleve eleve in Model.Eleves)
{

    <h2>@eleve.Utilisateur.Nom @eleve.Utilisateur.Prenom @eleve.Niveau</h2>
    <div class="cards">
        @foreach (Prestation prestation in eleve.Prestations)
        {
            @if (DateTime.Compare(prestation.DateFin, DateTime.Now) >= 0)
            {
                <div class="card prestation">
                    <div class="card__icon">
                        @Html.Raw(TypePrestationExtensions.IconHTMLPrestation(prestation.TypePrestation))
                    </div>

                    <h2 class="card__title">@TypePrestationExtensions.NomPrestation(prestation.TypePrestation)</h2>

                <div>
                    Date de début : @prestation.DateDebut<br>
                    Date de fin : @prestation.DateFin<br>
                    Enseignant : @prestation.Enseignant.Utilisateur.Nom.ToUpper() @prestation.Enseignant.Utilisateur.Prenom<br>
                    Niveau : @prestation.Niveau<br>
                        @if(prestation.Matiere != 0)
                        {
                             <text>
                            Matière: @prestation.Matiere <br>
                            </text>
                        }

                    <hr />
                        @if (prestation.Presentiel)
                        {
                            <text>
                                En Presentiel  <br>
                                Ville : @prestation.Ville
                            </text>
                        }
                        else
                        {
                            <text>
                                En distantiel  <br>
                                Lien de la visio : @prestation.LienVisio
                            </text>
                        }

                    </div>

                </div>
            }

        }
    </div>
}

<h1>Historique des prestations :</h1>


@foreach (Eleve eleve in Model.Eleves)
{

    <h2>@eleve.Utilisateur.Nom @eleve.Utilisateur.Prenom @eleve.Niveau</h2>
    <div class="cards">
        @foreach (Prestation prestation in eleve.Prestations)
        {
            @if (DateTime.Compare(DateTime.Now, prestation.DateFin) >= 0)
            {
                <div class="card historique">
                    <div class="card__icon">
                        @Html.Raw(TypePrestationExtensions.IconHTMLPrestation(prestation.TypePrestation))
                    </div>

                    <h2 class="card__title">@TypePrestationExtensions.NomPrestation(prestation.TypePrestation)</h2>

                    <div>
                        Date de début : @prestation.DateDebut<br>
                        Date de fin : @prestation.DateFin<br>
                        Enseignant : @prestation.Enseignant.Utilisateur.Nom<br>
                        Niveau : @prestation.Niveau<br>
                        @if(prestation.Matiere != 0)
                        {
                             <text>
                            Matière: @prestation.Matiere <br>
                            </text>
                        }
                        <hr />
                        @if (prestation.Presentiel)
                        {
                            <text>
                                En Presentiel  <br>
                                Ville : @prestation.Ville
                            </text>
                        }
                        else
                        {
                            <text>
                                En distantiel  <br>
                                Lien de la visio : @prestation.LienVisio
                            </text>
                        }
                    </div>

                </div>
            }

        }
    </div>
}


<h1>Historique des abonnements :</h1>

<div class="cards">


    @foreach (Tutorin.Models.Abonnement abonnement in Model.ResponsableEleve.Abonnements)
    {
        @if (abonnement.DateFin != DateTime.MinValue)
        {
            <div class="card historique">
                <div class="card__icon">
                    <i class="fa-solid fa-file-contract"></i>
                </div>

                <h2 class="card__title">@TypeAbonnementExtensions.NomAbonnement(abonnement.Type)</h2>

                <div>
                    @if (abonnement.EleveId > 0)
                    {
                        <text>
                            Eleve : @abonnement.Eleve.Utilisateur.Prenom @abonnement.Eleve.Utilisateur.Nom<br>
                        </text>
                    }
                    Début : @abonnement.DateDebut.ToString("d")<br>
                    Fin : @abonnement.DateFin.ToString("d")<br>
                    Prix mensuel : @abonnement.PrixTTC €
                </div>

            </div>
        }
    }

</div>
