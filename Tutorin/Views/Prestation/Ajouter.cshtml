@model Tutorin.Models.Prestation
@using System.Security.Claims;
@using Tutorin.Models
@{
    ViewBag.Title = "Ajout Prestation";
    Layout = "_LayoutDuSite";
}

@section css {
    <link href="/css/Form.css" rel="stylesheet" />
}

<h1>Ajouter</h1>
<div>

    @using (Html.BeginForm())
    {
            <fieldset>
                <legend>Prestation</legend>

                <div class="boite-form">
                @Html.LabelFor(m => Model.TypePrestation)<br />
                @Html.DropDownListFor(m => Model.TypePrestation, new SelectList(Enum.GetValues(typeof(TypePrestation))))<br />
                @Html.ValidationMessageFor(m => Model.TypePrestation)
                </div>

                <div class="boite-form">
                @Html.LabelFor(m => Model.Niveau)<br />
                @Html.DropDownListFor(m => Model.Niveau, new SelectList(Enum.GetValues(typeof(TypeNiveau))))<br />
                @Html.ValidationMessageFor(m => Model.Niveau)
                </div>

                <div class="boite-form">
                @Html.LabelFor(m => Model.Matiere) <br />
                @Html.DropDownListFor(m => Model.Matiere, new SelectList(Enum.GetValues(typeof(TypeMatiere))))<br />
                @Html.ValidationMessageFor(m => Model.Matiere)
                </div>

                <div class="boite-form">
                @Html.LabelFor(m => Model.DateDebut)<br />
                @Html.EditorFor(m => Model.DateDebut, new {@type = "date"} )<br />
                @Html.ValidationMessageFor(m => Model.DateDebut)
                </div>

                <div class="boite-form">
                @Html.LabelFor(m => Model.DateFin)<br />
                @Html.EditorFor(m => Model.DateFin, new {@type = "date"} )<br />
                @Html.ValidationMessageFor(m => Model.DateFin)
                </div>

                <div class="boite-form">
                @Html.LabelFor(m => Model.Presentiel)<br />
                @Html.DropDownListFor(model => Model.Presentiel ,new List<SelectListItem>(){ new SelectListItem(){ Text = "Oui", Value="True"}, new SelectListItem(){ Text = "Non", Value="False"}})<br />
                @Html.ValidationMessageFor(m => Model.Presentiel)
                </div>

                <div class="boite-form">
                @Html.LabelFor(m => Model.Ville)<br />
                @Html.TextBoxFor(m => Model.Ville )<br />
                @Html.ValidationMessageFor(m => Model.Ville)
                </div>

                <div class="boite-form">
                @Html.LabelFor(m => Model.Prix)<br />
                @Html.TextBoxFor(m => Model.Prix )<br />
                @Html.ValidationMessageFor(m => Model.Prix) @*Trouver comment obtenir que des float*@
                </div>

                <div class="boite-form">
                @Html.LabelFor(m => Model.LienVisio)<br />
                @Html.TextBoxFor(m => Model.LienVisio )<br />
                @Html.ValidationMessageFor(m => Model.LienVisio) 
                </div>


                <input class="boutonStyle" type="submit" value="Ajouter" />
            </fieldset>
    }

</div>

@section Script {
        <script type="text/javascript" src="~/Scripts/jquery-3.3.1.js"></script>
        <script type="text/javascript" src="~/Scripts/jquery.validate-vsdoc.js"></script>
        <script type="text/javascript" src="~/Scripts/jquery.validate.unobtrusive.js"></script>
}

@{
    bool authentifie = User.Identity.IsAuthenticated;
    string role = "";
    if (authentifie)
    {
        role = User.FindFirst(ClaimTypes.Role).Value;
    }

}

@section Menu {
    <a href="/home/">Accueil</a>

    @if (authentifie)
    {
        <a href="/@role/TableauDeBord/">Tableau de Bord</a>
        <a href="/login/Deconnexion">Déconnexion</a>
    }
    else
    {
        <a href="/login/">Connexion</a>
    }

}

