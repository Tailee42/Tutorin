@model Tutorin.ViewModels.PrestationViewModel
@using System.Security.Claims;
@using Tutorin.Models
@{
    ViewBag.Title = "Voir prestations";
    Layout = "_LayoutDuSite";
}

@{
    var enseignantId = User.FindFirst("RoleId").Value;
}


@section css {
    <link href="/css/cards.css" rel="stylesheet" />
}

<h1>S'inscrire à une prestation : </h1>


<div class="cards">
    @foreach (Tutorin.Models.Prestation prestation in Model.ListePrestations)
    {
        <div class="card">
            <div class="card__icon">
                @Html.Raw(TypePrestationExtensions.IconHTMLPrestation(prestation.TypePrestation))
            </div>
            <h2 class="card__title">@prestation.TypePrestation</h2>

            <div>
                Date : du @prestation.DateDebut au @prestation.DateFin
                Prix mensuel : @prestation.Prix €
                Niveau : @TypeNiveauExtensions.NomDuNiveau(prestation.Niveau)
            @if (prestation.Matiere != 0){
                <text>
                Matière : @TypeMatiereExtensions.NomMatiere(prestation.Matiere)
                </text>
            }
                Lieu : @prestation.Ville
            </div>

            <p>
                <a href="/Prestation/InscrireEnseignant?prestationId=@prestation.Id">S'inscrire</a>
            </p>

        </div>
    }
</div>



@{
    bool authentifie = User.Identity.IsAuthenticated;
    string role = "";
    if (authentifie)
    {
        role = User.FindFirst(ClaimTypes.Role).Value;
    }

}

@section Menu {
        <a href="/home/">Accueil</a>

    @if (authentifie)
    {
                <a href="/@role/TableauDeBord/">Tableau de Bord</a>
                <a href="/login/Deconnexion">Déconnexion</a>
    }
    else
    {
                <a href="/login/">Connexion</a>
    }

}