@model Tutorin.ViewModels.TableauBordEleveViewModel
@using Tutorin.Models
@{
    ViewBag.Title = "Tableau de Bord Eleve";
    Layout = "_LayoutDuSite";
}

@section css {
    <link href="/css/cards.css" rel="stylesheet" />
    <link href="/css/TableauDeBord.css" rel="stylesheet" />
}

@section Menu {

    <a href="/Index">Accueil</a>
    <a href="/ContenuPedagogique/">Les cours</a>
    <a href="/Eleve/modifier?eleveId=@Model.Eleve.Id">Mon Compte</a>
    <a href="/login/Deconnexion">Déconnexion</a>
}

<div class="nomUtilisateur">
    @Model.Eleve.Utilisateur.Nom.ToUpper() @Model.Eleve.Utilisateur.Prenom<br>
    Eleve<br>
</div>

<h1>Mon abonnement :</h1>

<div class="cards">

    <div class="card abonnement">
        <div class="card__icon">
            <i class="fa-solid fa-file-contract"></i>
        </div>

        <h2 class="card__title">@TypeAbonnementExtensions.NomAbonnement(Model.Abonnement.Type)</h2>

        <div>
            Depuis le : @Model.Abonnement.DateDebut.ToString("d")<br>
            Prix mensuel : @Model.Abonnement.PrixTTC €
        </div>

    </div>

</div>


<h1>Mon agenda :</h1>

<h2>Mes prochains évenements:</h2>

<div class="cards">
    @foreach (Prestation prestation in Model.Eleve.Prestations)
    {
        @if (DateTime.Compare(prestation.DateFin, DateTime.Now) >= 0)
        {
            <div class="card prestation">
                <div class="card__icon">
                    @Html.Raw(TypePrestationExtensions.IconHTMLPrestation(prestation.TypePrestation))
                </div>

                <h2 class="card__title">@TypePrestationExtensions.NomPrestation(prestation.TypePrestation)</h2>

                <div>
                    Date de début : @prestation.DateDebut<br>
                    Date de fin : @prestation.DateFin<br>
                    Enseignant : @prestation.Enseignant.Utilisateur.Nom<br>
                    Matière : @prestation.Matiere <br>
                    <hr />
                    @if (prestation.Presentiel)
                    {
                        <text>
                            En Presentiel : <br>
                            Ville : @prestation.Ville
                        </text>
                    }
                    else
                    {
                        <text>
                            En distantiel : <br>
                            Lien de la visio : @prestation.LienVisio
                        </text>
                    }

                </div>

            </div>
        }

    }
</div>



<h2>Mes évenements passés:</h2>
 <div class="cards">
    <div class="cards">
        @foreach (Prestation prestation in Model.Eleve.Prestations)
        {
            @if (DateTime.Compare(prestation.DateFin, DateTime.Now) <= 0)
            {
                <div class="card historique">
                    <div class="card__icon">
                        @Html.Raw(TypePrestationExtensions.IconHTMLPrestation(prestation.TypePrestation))
                    </div>

                    <h2 class="card__title">@TypePrestationExtensions.NomPrestation(prestation.TypePrestation)</h2>

                    <div>
                        Date de début : @prestation.DateDebut<br>
                        Date de fin : @prestation.DateFin<br>
                        Enseignant : @prestation.Enseignant.Utilisateur.Nom<br>
                        Matière : @prestation.Matiere <br>
                        <hr />
                        @if (prestation.Presentiel)
                        {
                            <text>
                                En Presentiel : <br>
                                Ville : @prestation.Ville
                            </text>
                        }
                        else
                        {
                            <text>
                                En distantiel : <br>
                                Lien de la visio : @prestation.LienVisio
                            </text>
                        }
                    </div>

                </div>
            }

        }
    </div>
 </div>